<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
// ┌────────────────────────────────────────────────────────────────────────┐ \\
// │ Abacus - Fast, efficient, cross precision, maths library               │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Brought to you by:                                                     │ \\
// │          _________                    .__               __             │ \\
// │         /   _____/__ __  ____    ____ |__|____    _____/  |_           │ \\
// │         \_____  \|  |  \/    \  / ___\|  \__  \  /    \   __\          │ \\
// │         /        \  |  /   |  \/ /_/  >  |/ __ \|   |  \  |            │ \\
// │        /_______  /____/|___|  /\___  /|__(____  /___|  /__|            │ \\
// │                \/           \//_____/         \/     \/                │ \\
// │                                                                        │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright © 2013 A.J.Pook (http://sungiant.github.com)                 │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Permission is hereby granted, free of charge, to any person obtaining  │ \\
// │ a copy of this software and associated documentation files (the        │ \\
// │ "Software"), to deal in the Software without restriction, including    │ \\
// │ without limitation the rights to use, copy, modify, merge, publish,    │ \\
// │ distribute, sublicense, and/or sellcopies of the Software, and to      │ \\
// │ permit persons to whom the Software is furnished to do so, subject to  │ \\
// │ the following conditions:                                              │ \\
// │                                                                        │ \\
// │ The above copyright notice and this permission notice shall be         │ \\
// │ included in all copies or substantial portions of the Software.        │ \\
// │                                                                        │ \\
// │ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,        │ \\
// │ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     │ \\
// │ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. │ \\
// │ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY   │ \\
// │ CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,   │ \\
// │ TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE       │ \\
// │ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                 │ \\
// └────────────────────────────────────────────────────────────────────────┘ \\
<#@ include file="Packed.t4"#>

using System;
using System.Globalization;
using System.Runtime.InteropServices;

namespace Sungiant.Abacus.Packed
{
	[StructLayout (LayoutKind.Sequential)]
	public struct Bgr_5_6_5 
		: IPackedValue<UInt16>
		, IEquatable<Bgr_5_6_5>
		, IPackedReal3
	{
		public override String ToString ()
		{
			return this.packedValue.ToString ("X4", CultureInfo.InvariantCulture);
		}

		static void Pack(ref SinglePrecision.Vector3 realRgb, out UInt16 packedBgr)
		{
			UInt32 r = PackUtils.PackUnsignedNormalisedValue(31f, realRgb.X) << 11;
			UInt32 g = PackUtils.PackUnsignedNormalisedValue(63f, realRgb.Y) << 5;
			UInt32 b = PackUtils.PackUnsignedNormalisedValue(31f, realRgb.Z);
			packedBgr = (UInt16)((r | g) | b);
		}

		static void Unpack(UInt16 packedBgr, out SinglePrecision.Vector3 realRgb)
		{
			realRgb.X = PackUtils.UnpackUnsignedNormalisedValue(0x1f, (UInt32)(packedBgr >> 11));
			realRgb.Y = PackUtils.UnpackUnsignedNormalisedValue(0x3f, (UInt32)(packedBgr >> 5));
			realRgb.Z = PackUtils.UnpackUnsignedNormalisedValue(0x1f, packedBgr);
		}

		<#  GeneratePackedCommon("Bgr_5_6_5", "UInt16", "packedBgr", "realRgb", 3); #>
	}
}
