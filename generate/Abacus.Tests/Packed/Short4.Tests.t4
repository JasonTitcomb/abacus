    /// <summary>
    /// Tests the Short4 packed data type.
    /// </summary>
    [TestFixture]
    public class Short4Tests
    {
        /// <summary>
        /// Iterates over a random selection of values within the range of
        /// possible Short4 values and makes sure that unpacking them and 
        /// then re-packing that result yeilds the original packed value.
        /// </summary>
        [Test]
        public void TestRandomValues_i()
        {
            var rand = new System.Random();
            var buff = new Byte[8];
            
            for(Int32 i = 0; i < Settings.NumTests; ++i)
            {
                rand.NextBytes(buff);
                BitConverter.ToUInt64(buff, 0);

                UInt64 packed = BitConverter.ToUInt64(buff, 0);
                
                var packedObj = new Short4();
                
                packedObj.PackedValue = packed;
                
                SinglePrecision.Vector4 unpacked;
                
                packedObj.UnpackTo(out unpacked);
                
                var newPackedObj = new Short4(ref unpacked);
                
                Assert.That(newPackedObj.PackedValue, Is.EqualTo(packed));
            }
        }

        /// <summary>
        /// For a given example, this test ensures that the ToString function
        /// yields the expected string.
        /// </summary>
        [Test]
        public void TestMemberFn_ToString_i()
        {
            var testCase = new Short4();
            var f = new SinglePrecision.Vector4(0.656f, 0.125f, 0.222f, 0.861f);
            testCase.PackFrom(ref f);
            String s = testCase.ToString ();
            Assert.That(s, Is.EqualTo("A7"));
        }

<#  GeneratePackedTestsCommon("Short4", "UInt64", "packedXyzw", "realXyzw", 4); #>
    }

