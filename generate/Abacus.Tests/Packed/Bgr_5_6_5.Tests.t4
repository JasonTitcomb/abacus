    /// <summary>
    /// Tests the Bgr_5_6_5 packed data type.
    /// </summary>
    [TestFixture]
    public class Bgr_5_6_5Tests
    {
        /// <summary>
        /// Iterates over every possible Bgr_5_6_5 value and makes sure that
        /// unpacking them and then re-packing that result yeilds the 
        /// original packed value.
        /// </summary>
        [Test]
        public void TestAllPossibleValues_i()
        {
            UInt16 packed = UInt16.MinValue;
            while ( packed < UInt16.MaxValue )
            {
                ++packed;
                
                var packedObj = new Bgr_5_6_5();
                
                packedObj.PackedValue = packed;
                
                SinglePrecision.Vector3 unpacked;
                
                packedObj.UnpackTo(out unpacked);
                
                var newPackedObj = new Bgr_5_6_5(ref unpacked);
                
                Assert.That(newPackedObj.PackedValue, Is.EqualTo(packed));
            }
        }

        /// <summary>
        /// For a given example, this test ensures that the ToString function
        /// yields the expected string.
        /// </summary>
        [Test]
        public void TestMemberFn_ToString_i()
        {
            var testCase = new Bgr_5_6_5();
            testCase.PackFrom(new SinglePrecision.Vector3(0.656f, 0.125f, 0.861f);
            String s = testCase.ToString ();
            Assert.That(s, Is.EqualTo("A7"));
        }

<#  GeneratePackedTestsCommon("Bgr_5_6_5", "UInt16", "packedBgr", "realRgb", 3); #>
    }

