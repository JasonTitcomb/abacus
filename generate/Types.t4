<#+
    class FixedTypeDefinition
    {
        public String TypeName { get; private set; }
        public String RawTypeName { get; private set; }
        public UInt16 ByteCount { get; private set; }
        public UInt16 FractionalByteCount { get; private set; }
        
        public FixedTypeDefinition (String typeName, String rawTypeName, UInt16 byteCount, UInt16 fractionalByteCount)
        {
            this.TypeName = typeName;
            this.RawTypeName = rawTypeName;
            this.ByteCount = byteCount;
            this.FractionalByteCount = fractionalByteCount;
        }
    }

    FixedTypeDefinition[] GetFixedTypeDefinitions()
    {
        return new FixedTypeDefinition[]
        {
            new FixedTypeDefinition ("Fixed32", "Int32", 32, 12)
        };
    }

    string[] GetRealTypes()
    {
        var builtInTypes = new List<String>()
        { 
            "Single", "Double"
        };

        var customTypes = GetFixedTypeDefinitions().Select(x => x.TypeName).ToList();

        var allTypes = new List<String>();

        allTypes.AddRange (builtInTypes);
        allTypes.AddRange (customTypes);

        return allTypes.ToArray();
    }
    
    string[] GetIntegerTypes()
    {
        return new string[]{ "Int32", "Int64" };
    }
#>