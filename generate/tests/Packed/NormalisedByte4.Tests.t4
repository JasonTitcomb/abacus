    /// <summary>
    /// Tests the NormalisedByte4 packed data type.
    /// </summary>
    [TestFixture]
    public class NormalisedByte4Tests
    {
        /// <summary>
        /// Iterates over a random selection of values within the range of
        /// possible NormalisedByte4 values and makes sure that unpacking them and 
        /// then re-packing that result yeilds the original packed value.
        /// </summary>
        [Test]
        public void TestRandomValues_i()
        {
            var rand = new System.Random();
            var buff = new Byte[4];
            
            for(Int32 i = 0; i < Settings.NumTests; ++i)
            {
                rand.NextBytes(buff);
                BitConverter.ToUInt32(buff, 0);
                UInt32 packed = BitConverter.ToUInt32(buff, 0);
                var packedObj = new NormalisedByte4();
                
                packedObj.PackedValue = packed;
                
                SinglePrecision.Vector4 unpacked;
                
                packedObj.UnpackTo(out unpacked);
                
                var newPackedObj = new NormalisedByte4(ref unpacked);
                
                Assert.That(newPackedObj.PackedValue, Is.EqualTo(packed));
            }
        }

<#  GeneratePackedTestsCommon("NormalisedByte4", "UInt32", "packedXyzw", "realXyzw", 4); #>
    }

