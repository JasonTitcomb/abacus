<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
// ┌────────────────────────────────────────────────────────────────────────┐ \\
// │ Abacus - Fast, efficient, cross precision, maths library               │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Brought to you by:                                                     │ \\
// │          _________                    .__               __             │ \\
// │         /   _____/__ __  ____    ____ |__|____    _____/  |_           │ \\
// │         \_____  \|  |  \/    \  / ___\|  \__  \  /    \   __\          │ \\
// │         /        \  |  /   |  \/ /_/  >  |/ __ \|   |  \  |            │ \\
// │        /_______  /____/|___|  /\___  /|__(____  /___|  /__|            │ \\
// │                \/           \//_____/         \/     \/                │ \\
// │                                                                        │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright © 2013 A.J.Pook (http://sungiant.github.com)                 │ \\
// ├────────────────────────────────────────────────────────────────────────┤ \\
// │ Permission is hereby granted, free of charge, to any person obtaining  │ \\
// │ a copy of this software and associated documentation files (the        │ \\
// │ "Software"), to deal in the Software without restriction, including    │ \\
// │ without limitation the rights to use, copy, modify, merge, publish,    │ \\
// │ distribute, sublicense, and/or sellcopies of the Software, and to      │ \\
// │ permit persons to whom the Software is furnished to do so, subject to  │ \\
// │ the following conditions:                                              │ \\
// │                                                                        │ \\
// │ The above copyright notice and this permission notice shall be         │ \\
// │ included in all copies or substantial portions of the Software.        │ \\
// │                                                                        │ \\
// │ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,        │ \\
// │ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     │ \\
// │ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. │ \\
// │ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY   │ \\
// │ CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,   │ \\
// │ TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE       │ \\
// │ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                 │ \\
// └────────────────────────────────────────────────────────────────────────┘ \\

<#@ include file="../Types.t4"#>
<#@ include file="GeneratePacked.t4"#>

using System;
using System.Runtime.InteropServices;
using System.Globalization;
using System.Collections;
using System.Collections.Generic;

namespace Sungiant.Abacus
{
<#@ include file="IPackedReal.t4"#>
<#@ include file="IPackedValue.t4"#>
<#@ include file="PackUtils.t4"#>
<#@ include file="Fixed.t4"#>
<#@ include file="RealMaths.t4"#>

    /// <summary>
    /// todo
    /// </summary>
    internal static class MarshalHelper
    {
        // Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.
        internal static void Copy( IntPtr source, Int32[] destination, Int32 startIndex, Int32 length )
        {
            Marshal.Copy(source, destination, startIndex, length);
        }   

        // Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.
        internal static void Copy( IntPtr source, Int64[] destination, Int32 startIndex, Int32 length )
        {
            Marshal.Copy(source, destination, startIndex, length);
        }

        // Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.
        internal static void Copy( IntPtr source, Single[] destination, Int32 startIndex, Int32 length )
        {
            Marshal.Copy(source, destination, startIndex, length);
        }

        // Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.
        internal static void Copy( IntPtr source, Double[] destination, Int32 startIndex, Int32 length )
        {
            Marshal.Copy(source, destination, startIndex, length);
        }

        // Copies data from an unmanaged memory pointer to a managed fixed32-precision fixed-point number array.
        internal static void Copy( IntPtr source, Fixed32[] destination, Int32 startIndex, Int32 length )
        {
            throw new NotImplementedException();
        }
    }

    /// <summary>
    /// todo
    /// </summary>
    public static class RandomExtensions
    {
        /// <summary>
        /// Returns a random Single between 0.0 & 1.0
        /// </summary>
        public static Single NextSingle(this System.Random r)
        {
            return (Single) r.NextDouble();
        }

        /// <summary>
        /// Returns a random Fixed32 between 0.0 & 1.0
        /// </summary>
        public static Fixed32 NextFixed32(this System.Random r)
        {
            Fixed32 max = 1;
            Fixed32 min = 0;

            Int32 randomInt32 = r.Next(min.RawValue, max.RawValue);

            return Fixed32.CreateFromRaw(randomInt32);
        }
    }

}

namespace Sungiant.Abacus.Packed
{
<#@ include file="Packed/Alpha8.t4"#>
<#@ include file="Packed/Bgr_5_6_5.t4"#>
<#@ include file="Packed/Bgra16.t4"#>
<#@ include file="Packed/Bgra_5_5_5_1.t4"#>
<#@ include file="Packed/Byte4.t4"#>
<#@ include file="Packed/NormalisedByte2.t4"#>
<#@ include file="Packed/NormalisedByte4.t4"#>
<#@ include file="Packed/NormalisedShort2.t4"#>
<#@ include file="Packed/NormalisedShort4.t4"#>
<#@ include file="Packed/Rg32.t4"#>
<#@ include file="Packed/Rgba32.t4"#>
<#@ include file="Packed/Rgba64.t4"#>
<#@ include file="Packed/Rgba_10_10_10_2.t4"#>
<#@ include file="Packed/Short2.t4"#>
<#@ include file="Packed/Short4.t4"#>
}


<# foreach( var type in GetIntegerTypes() ) { #>
namespace Sungiant.Abacus.<#= type #>Precision
{
<#@ include file="Precision/Integer/Point2.t4"#>
<#@ include file="Precision/Integer/Point3.t4"#>
}

<# } #>

<# foreach( var type in GetRealTypes() ) { #>
namespace Sungiant.Abacus.<#= type #>Precision
{
<#@ include file="Precision/Real/GjkDistance.t4"#>
<#@ include file="Precision/Real/Matrix44.t4"#>
<#@ include file="Precision/Real/Quaternion.t4"#>
<#@ include file="Precision/Real/Vector2.t4"#>
<#@ include file="Precision/Real/Vector3.t4"#>
<#@ include file="Precision/Real/Vector4.t4"#>
}

<# } #>