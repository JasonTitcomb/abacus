        /// <summary>
        /// beware, doing this might not produce what you expect.  you likely
        /// want to lerp between quaternions.
        /// </summary>
        public static void Lerp (
            ref Matrix44 matrix1,
            ref Matrix44 matrix2,
            ref <#= type #> amount,
            out Matrix44 result)
        {
            <#= type #> zero = 0;
            <#= type #> one = 1;
            if( amount < zero || amount > one )
            {
                throw new ArgumentOutOfRangeException();
            }

            result.M00 = matrix1.M00 + ((matrix2.M00 - matrix1.M00) * amount);
            result.M01 = matrix1.M01 + ((matrix2.M01 - matrix1.M01) * amount);
            result.M02 = matrix1.M02 + ((matrix2.M02 - matrix1.M02) * amount);
            result.M03 = matrix1.M03 + ((matrix2.M03 - matrix1.M03) * amount);
            result.M10 = matrix1.M10 + ((matrix2.M10 - matrix1.M10) * amount);
            result.M11 = matrix1.M11 + ((matrix2.M11 - matrix1.M11) * amount);
            result.M12 = matrix1.M12 + ((matrix2.M12 - matrix1.M12) * amount);
            result.M13 = matrix1.M13 + ((matrix2.M13 - matrix1.M13) * amount);
            result.M20 = matrix1.M20 + ((matrix2.M20 - matrix1.M20) * amount);
            result.M21 = matrix1.M21 + ((matrix2.M21 - matrix1.M21) * amount);
            result.M22 = matrix1.M22 + ((matrix2.M22 - matrix1.M22) * amount);
            result.M23 = matrix1.M23 + ((matrix2.M23 - matrix1.M23) * amount);
            result.M30 = matrix1.M30 + ((matrix2.M30 - matrix1.M30) * amount);
            result.M31 = matrix1.M31 + ((matrix2.M31 - matrix1.M31) * amount);
            result.M32 = matrix1.M32 + ((matrix2.M32 - matrix1.M32) * amount);
            result.M33 = matrix1.M33 + ((matrix2.M33 - matrix1.M33) * amount);
        }


