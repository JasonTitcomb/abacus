        // Equality Operators //----------------------------------------------//

        /// <summary>
        /// Determines whether or not two Matrix44 objects are equal.
        /// </summary>
        public static Boolean Equals (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Boolean result;
            Equals (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Determines whether or not two Matrix44 objects are equal using the
        /// (X==Y) operator.
        /// </summary>
        public static Boolean operator == (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Boolean result;
            Equals (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Determines whether or not two Matrix44 objects are not equal using
        /// the (X!=Y) operator.
        /// </summary>
        public static Boolean operator != (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Boolean result;
            Equals (ref matrix1, ref matrix2, out result);
            return !result;
        }

        // Variant Addition Operators //--------------------------------------//

        /// <summary>
        /// Performs addition of two Matrix44 objects.
        /// </summary>
        public static Matrix44 Add (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Add (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs addition of two Matrix44 objects using the (X+Y) operator.
        /// </summary>
        public static Matrix44 operator + (Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Add (ref matrix1, ref matrix2, out result);
            return result;
        }

        // Variant Subtraction Operators //-----------------------------------//

        /// <summary>
        /// Performs subtraction of two Matrix44 objects.
        /// </summary>
        public static Matrix44 Subtract (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Subtract (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs subtraction of two Matrix44 objects using the (X-Y)
        /// operator.
        /// </summary>
        public static Matrix44 operator - (Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Subtract (ref matrix1, ref matrix2, out result);
            return result;
        }

        // Variant Negation Operators //--------------------------------------//

        /// <summary>
        /// Performs negation of a Matrix44 object.
        /// </summary>
        public static Matrix44 Negate (Matrix44 matrix)
        {
            Matrix44 result;
            Negate (ref matrix, out result);
            return result;
        }

        /// <summary>
        /// Performs negation of a Matrix44 object using the (-X) operator.
        /// </summary>
        public static Matrix44 operator - (Matrix44 matrix)
        {
            Matrix44 result;
            Negate (ref matrix, out result);
            return result;
        }

        // Variant Multiplication Operators //--------------------------------//

        /// <summary>
        /// Performs muliplication of two Matrix44 objects.
        /// </summary>
        public static Matrix44 Multiply (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Multiply (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs multiplication of a Matrix44 object and a <#= type #>
        /// precision scaling factor.
        /// </summary>
        public static Matrix44 Multiply (
            Matrix44 matrix, <#= type #> scaleFactor)
        {
            Matrix44 result;
            Multiply (ref matrix, ref scaleFactor, out result);
            return result;
        }

        /// <summary>
        /// Performs muliplication of two Matrix44 objects using the (X*Y)
        /// operator.
        /// </summary>
        public static Matrix44 operator * (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Multiply (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs multiplication of a Matrix44 object and a <#= type #>
        /// precision scaling factor using the (X*y) operator.
        /// </summary>
        public static Matrix44 operator * (
            Matrix44 matrix, <#= type #> scaleFactor)
        {
            Matrix44 result;
            Multiply (ref matrix, ref scaleFactor, out result);
            return result;
        }

        /// <summary>
        /// Performs multiplication of a <#= type #> precision scaling factor
        /// and aMatrix44 object using the (x*Y) operator.
        /// </summary>
        public static Matrix44 operator * (
            <#= type #> scaleFactor, Matrix44 matrix)
        {
            Matrix44 result;
            Multiply (ref matrix, ref scaleFactor, out result);
            return result;
        }

        // Variant Division Operators //--------------------------------------//

        /// <summary>
        /// Performs division of two Matrix44 objects.
        /// </summary>
        public static Matrix44 Divide (
            Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Divide (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs division of a Matrix44 object and a <#= type #> precision
        /// scaling factor.
        /// </summary>
        public static Matrix44 Divide (
            Matrix44 matrix1, <#= type #> divider)
        {
            Matrix44 result;
            Divide (ref matrix1, ref divider, out result);
            return result;
        }

        /// <summary>
        /// Performs division of two Matrix44 objects using the (X/Y) operator.
        /// </summary>
        public static Matrix44 operator / (Matrix44 matrix1, Matrix44 matrix2)
        {
            Matrix44 result;
            Divide (ref matrix1, ref matrix2, out result);
            return result;
        }

        /// <summary>
        /// Performs division of a Matrix44 object and a <#= type #> precision
        /// scaling factor using the (X/y) operator.
        /// </summary>
        public static Matrix44 operator / (Matrix44 matrix1, <#= type #> divider)
        {
            Matrix44 result;
            Divide (ref matrix1, ref divider, out result);
            return result;
        }



