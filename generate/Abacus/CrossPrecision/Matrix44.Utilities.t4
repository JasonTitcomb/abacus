        /// <summary>
        /// beware, doing this might not produce what you expect.  you likely
        /// want to lerp between quaternions.
        /// </summary>
        public static void Lerp (
            ref Matrix44 matrix1,
            ref Matrix44 matrix2,
            ref <#= type #> amount,
            out Matrix44 result)
        {
            <#= type #> zero = 0;
            <#= type #> one = 1;
            if( amount < zero || amount > one )
            {
                throw new ArgumentOutOfRangeException();
            }

            result.R0C0 = matrix1.R0C0 + ((matrix2.R0C0 - matrix1.R0C0) * amount);
            result.R0C1 = matrix1.R0C1 + ((matrix2.R0C1 - matrix1.R0C1) * amount);
            result.R0C2 = matrix1.R0C2 + ((matrix2.R0C2 - matrix1.R0C2) * amount);
            result.R0C3 = matrix1.R0C3 + ((matrix2.R0C3 - matrix1.R0C3) * amount);
            result.R1C0 = matrix1.R1C0 + ((matrix2.R1C0 - matrix1.R1C0) * amount);
            result.R1C1 = matrix1.R1C1 + ((matrix2.R1C1 - matrix1.R1C1) * amount);
            result.R1C2 = matrix1.R1C2 + ((matrix2.R1C2 - matrix1.R1C2) * amount);
            result.R1C3 = matrix1.R1C3 + ((matrix2.R1C3 - matrix1.R1C3) * amount);
            result.R2C0 = matrix1.R2C0 + ((matrix2.R2C0 - matrix1.R2C0) * amount);
            result.R2C1 = matrix1.R2C1 + ((matrix2.R2C1 - matrix1.R2C1) * amount);
            result.R2C2 = matrix1.R2C2 + ((matrix2.R2C2 - matrix1.R2C2) * amount);
            result.R2C3 = matrix1.R2C3 + ((matrix2.R2C3 - matrix1.R2C3) * amount);
            result.R3C0 = matrix1.R3C0 + ((matrix2.R3C0 - matrix1.R3C0) * amount);
            result.R3C1 = matrix1.R3C1 + ((matrix2.R3C1 - matrix1.R3C1) * amount);
            result.R3C2 = matrix1.R3C2 + ((matrix2.R3C2 - matrix1.R3C2) * amount);
            result.R3C3 = matrix1.R3C3 + ((matrix2.R3C3 - matrix1.R3C3) * amount);
        }


