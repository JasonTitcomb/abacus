        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateTranslation (Vector3 position)
        {
            Matrix44 result;
            CreateTranslation (ref position, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateTranslation (
            <#= type #> xPosition,
            <#= type #> yPosition,
            <#= type #> zPosition)
        {
            Matrix44 result;
            CreateTranslation (
                ref xPosition, ref yPosition, ref zPosition,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateScale (
            <#= type #> xScale,
            <#= type #> yScale,
            <#= type #> zScale)
        {
            Matrix44 result;
            CreateScale (
                ref xScale, ref yScale, ref zScale,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateScale (Vector3 scales)
        {
            Matrix44 result;
            CreateScale (ref scales, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateScale (<#= type #> scale)
        {
            Matrix44 result;
            CreateScale (ref scale, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateRotationX (<#= type #> radians)
        {
            Matrix44 result;
            CreateRotationX (ref radians, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateRotationY (<#= type #> radians)
        {
            Matrix44 result;
            CreateRotationY (ref radians, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateRotationZ (<#= type #> radians)
        {
            Matrix44 result;
            CreateRotationZ (ref radians, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateFromAxisAngle (
            Vector3 axis,
            <#= type #> angle)
        {
            Matrix44 result;
            CreateFromAxisAngle (ref axis, ref angle, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateFromAllAxis (
            Vector3 right,
            Vector3 up,
            Vector3 backward)
        {
            Matrix44 result;
            CreateFromAllAxis (
                ref right, ref up, ref backward, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateWorld (
            Vector3 position,
            Vector3 forward,
            Vector3 up)
        {
            Matrix44 result;
            CreateWorld (ref position, ref forward, ref up, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateFromQuaternion (Quaternion quaternion)
        {
            Matrix44 result;
            CreateFromQuaternion (ref quaternion, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateFromYawPitchRoll (
            <#= type #> yaw,
            <#= type #> pitch,
            <#= type #> roll)
        {
            Matrix44 result;
            CreateFromYawPitchRoll (ref yaw, ref pitch, ref roll, out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateBillboard (
            Vector3 objectPosition,
            Vector3 cameraPosition,
            Vector3 cameraUpVector,
            Vector3? cameraForwardVector)
        {
            Matrix44 result;
            CreateBillboard (
                ref objectPosition, ref cameraPosition,
                ref cameraUpVector, ref cameraForwardVector,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateConstrainedBillboard (
            Vector3 objectPosition,
            Vector3 cameraPosition,
            Vector3 rotateAxis,
            Vector3? cameraForwardVector,
            Vector3? objectForwardVector)
        {
            Matrix44 result;
            CreateConstrainedBillboard (
                ref objectPosition, ref cameraPosition,
                ref rotateAxis, ref cameraForwardVector, ref objectForwardVector,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreatePerspectiveFieldOfView (
            <#= type #> fieldOfView,
            <#= type #> aspectRatio,
            <#= type #> nearPlane,
            <#= type #> farPlane)
        {
            Matrix44 result;
            CreatePerspectiveFieldOfView (
                ref fieldOfView, ref aspectRatio, ref nearPlane, ref farPlane,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreatePerspective (
            <#= type #> width,
            <#= type #> height,
            <#= type #> nearPlane,
            <#= type #> farPlane)
        {
            Matrix44 result;
            CreatePerspective (
                ref width, ref height, ref nearPlane, ref farPlane,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreatePerspectiveOffCenter (
            <#= type #> left,
            <#= type #> right,
            <#= type #> bottom,
            <#= type #> top,
            <#= type #> nearPlane,
            <#= type #> farPlane)
        {
            Matrix44 result;
            CreatePerspectiveOffCenter (
                ref left, ref right, ref bottom,
                ref top, ref nearPlane, ref farPlane,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateOrthographic (
            <#= type #> width,
            <#= type #> height,
            <#= type #> nearPlane,
            <#= type #> farPlane)
        {
            Matrix44 result;
            CreateOrthographic (
                ref width, ref height, ref nearPlane, ref farPlane,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateOrthographicOffCenter (
            <#= type #> left,
            <#= type #> right,
            <#= type #> bottom,
            <#= type #> top,
            <#= type #> nearPlane,
            <#= type #> farPlane)
        {
            Matrix44 result;
            CreateOrthographicOffCenter (
                ref left, ref right, ref bottom,
                ref top, ref nearPlane, ref farPlane,
                out result);
            return result;
        }

        /// <summary>
        /// Variant function.
        /// </summary>
        public static Matrix44 CreateLookAt (
            Vector3 cameraPosition,
            Vector3 cameraTarget,
            Vector3 cameraUpVector)
        {
            Matrix44 result;
            CreateLookAt (
                ref cameraPosition, ref cameraTarget, ref cameraUpVector,
                out result);
            return result;
        }

